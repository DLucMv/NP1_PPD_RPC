from xmlrpc.server import SimpleXMLRPCServer
from xmlrpc.server import SimpleXMLRPCRequestHandler

# Classe com todos o mÃ©todos fornecidos pelo servidor


class SeegaServer:
    def __init__(self):
        self.tabuleiro = [["â¬œ" for _ in range(5)] for _ in range(5)]
        self.jogadores = []  # Lista de tuplas: (nome, peÃ§a)
        self.vez = None
        self.finalizado = False
        self.vencedor = None
        self.chat = []
        self.mensagens = {}

        # ColocaÃ§Ã£o inicial (cada jogador terÃ¡ 12 peÃ§as)
        self.pecas_restantes = {"ğŸ”´": 12, "ğŸ”µ": 12}

    def entrar_jogo(self, nome):
        if len(self.jogadores) >= 2:
            return None, "O jogo jÃ¡ estÃ¡ cheio."

        peca = "ğŸ”´" if not self.jogadores else "ğŸ”µ"
        self.jogadores.append((nome, peca))

        if len(self.jogadores) == 2:
            self.vez = "ğŸ”´"

        return peca, "Aguardando o outro jogador..." if len(self.jogadores) < 2 else "O jogo comeÃ§ou!"


# ConfiguraÃ§Ã£o RPC
class RequestHandler(SimpleXMLRPCRequestHandler):
    rpc_paths = ("/RPC",)


servidor = SeegaServer()

with SimpleXMLRPCServer(("localhost", 8000), requestHandler=RequestHandler, allow_none=True) as server:
    server.register_instance(servidor)
    print("Servidor Seega escutando na porta 8000...âœ…")
    server.serve_forever()
